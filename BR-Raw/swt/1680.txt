Table events screwed up if asyncExec happens on focus lost / out
I20080311-0800.
Not sure whether this is a regression as I detected this while working on a new feature: if an asyncExec is sent inside a focusLost/Out listener then the event notification is completely screwed, e.g.
mouseDown on the new widget is not sent when the mouse was pressed but instead a mouseDown is sent when it is released.
Test Case: start the following snippet and move the mouse over 'Item 0' or 'Item 1' then press down (and don't release and don't move the mouse) the left mouse button ==> only "focus lost" gets written to Console view (should also: "down").
Release the mouse ==> "down" is written to the Console view.
Test Snippet:
/*******************************************************************************
* Copyright (c) 2008 IBM Corporation and others.
* All rights reserved.
This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
*  http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation
- initial API and implementation
*******************************************************************************/
package org.eclipse.swt.snippets;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.FocusAdapter;
import org.eclipse.swt.events.FocusEvent;
import org.eclipse.swt.events.MouseAdapter;
import org.eclipse.swt.events.MouseEvent;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableItem;
public class EventsScrewedBug {
public static void main(String[] args) {
final Display display= new Display();
final Shell shell= new Shell(display);
shell.setSize(100, 100);
shell.addFocusListener(new FocusAdapter() {
public void focusLost(FocusEvent e) {
System.out.println("focus lost");

// FIXME: this screws the event notification
display.asyncExec(new Runnable() {
public void run() {
}
});
}
});
shell.open();
Shell shell2= new Shell(shell, SWT.TOOL | SWT.ON_TOP | SWT.RESIZE);
Table table= new Table(shell2, SWT.SINGLE);
for (int i= 0; i
< 2; i++) {
TableItem item= new TableItem(table, 0);
item.setText("Item " + i);
}
table.setSize(100, 100);
table.addMouseListener(new MouseAdapter() {
public void mouseDown(MouseEvent e) {
System.out.println("down");
}
public void mouseUp(MouseEvent e) {
System.out.println("up");
}
});
shell2.setSize(200, 200);
shell2.setVisible(true);
while (!shell.isDisposed()) {
if (!display.readAndDispatch())
display.sleep();
}

display.dispose();
}
}