Bug 405517 – [1.8] IMethod#getFlags() and IMethodBinding#getModifiers(): What about default flags?
Follow-up to bug 399791.
That bug only added API in Flags for AccDefaultMethod, but the flag isn't actually returned by IMethod#getFlags().
On the other hand IMethod#getFlags() currently includes the unspecified Bit18 (ClassFileConstants.AccAnnotationDefault) for an annotation type method with a default value, e.g.
javax.annotation.Generated#date() -- but ONLY if it's coming from a class file.
For source files, it's masked away in SourceElementNotifier
#notifySourceElementRequestor(AbstractMethodDeclaration, ...)
For IMethod#getFlags() and IMethodBinding#getModifiers(), we need to decide which of these flags to include:
- Flags/ClassFileConstants#AccDeprecated:
included in getFlags(), but not in getModifiers() (spec'd like this)
=> keep it like this
- ClassFileConstants#AccAnnotationDefault (no API yet):
sometimes included in getFlags()
=> needs a new API constant in Flags
=> getFlags(): should always be returned since we may want to show this in the element icon
=> getModifiers(): not necessary; checking IMethodBinding#getDefaultValue() for null is good enough
- Flags/ExtraCompilerModifiers#AccDefaultMethod:
currently not returned anywhere
=> getFlags(): should always be returned since we may want to show this in the element icon; absence of 'abstract' is not enough to detect this in source
=> getModifiers(): not necessary; if declaring type is an interface type and IMethodBinding#getModifiers() includes 'abstract', then we know it's a default method.