Bug 468893 – processor gets multiple processingOver=true calls in some cases
Created attachment 253955 [details]
small standalone project that demonstrates the problem
Attached is a trivial test project that demonstrates the following scenario
Test annotation processor scans all types annotated with @Annotation and generates single TypeIndex interface that includes constants for all annotated types (think database IDs for all entity types).
TypeIndex generates is expected to happen at the end of annotation processing, when roundEnv.processingOver()==true.
Test project includes Annotated class and TypeIndexClient class that extends TypeIndex interface generated by the annotation processor.
There are two problems when I run Project->Clean on the test project.
First, and most importantly, annotation processor is called twice with roundEnv.processingOver()==true.
The second invocation fails in Filer#createSourceFile because the same type was already created.
Second, neither the exception thrown by the annotation processor nor Messager#printMessage call get an error marker in the workspace, which makes it next to impossible for the user to realize there is a problem.