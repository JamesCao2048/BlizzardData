[ContextMgmt] Enhance ContextManagerEvent
I propose the following API for ContextManagerEvent.
These are the methods I'd like the event to have (no more and no less).
getContextManager() submissionAdded(String contextId) submissionRemoved(String contextId) contextEnabled(String contextId) contextDisabled(String contextId) contextDefined(String contextId) We in debugland want to know when submissions are added in order to promote views.
It's important that we hear about submissions, not just enablement.
A context will stay enabled for the life of a debug session, but we want to react when the user's selection switches between enabled contexts.
Telling us when submissions are added is basically a way for us to know which context is the "most active." The story we want to implement in debug land is: Responding to context changes: 1.When a debugging context is enabled, actions bound to that context appear (the workbench gives us this for fre
e).
2.When a debugging context is submitted, views bound to that context appear (our code).
3.When a debugging context is disabled, actions bound to that context disappear (the workbench gives us this for free).
4.When a debugging context is disabled, views bound to that context and no other active context are closed (our code).
Activating contexts: 1.When an element in the Debug view is selected (and the element provides the right adapter), we submit a context request.
2.We keep a mapping of launches to the context requests they've submitted.
A launch won't maintain more than one submission per context id.
If it tries (say, by selecting multiple stack frames), a new request will be submitted and then the old one will be removed.
3.When a launch terminates, all context submissions from that launch are removed.