Anonymous classes unaware of introductions into abstract classes (error can't find type $Local$)
The example below generates a compiler error, on both Linux and Windows. The
error occurs for ajdt (eclipse) as well.
The compiler error:
$ ajc -version
> AspectJ Compiler 1.2 built on Friday May 21, 2004 at
> 15:06:22 GMT
> $ ajc ConcreteClassA.java
> error can't find type $Local$
>
> /home/marin/tests/ConcreteClassA.java:18 error Class
> must implement the inherited abstract method
> InterfaceA.a2()
> InterfaceA a = new AbstractClassA() {
>                    ^^^^^^^^^^^^^
>
> 2 errors
> --------
>
The example (in ConcreteClassA.java):
interface InterfaceA {
public void a1();

public void a2();

}
abstract class AbstractClassA implements InterfaceA {
public void a1() {
System.out.println("AbstractClassA.a()");
}

}
public class ConcreteClassA extends AbstractClassA {
public void someMethod() {
InterfaceA a = new AbstractClassA() {
};
}

}
aspect IntroAspectA {
public void AbstractClassA.a2() {
System.out.println("AbstractClassA.a2() from IntroAspectA");
}
}
------------
If you comment out the body of someMethod() (the anonymous class), the code
compiles without errors.