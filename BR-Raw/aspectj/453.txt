around advice throws java.lang.VerifyError at runtime
I have an aspect that captures around() a pcd and returns an Object[], though
the actual methods being instrumented might return any valid POJO array, i
understand that AspectJ will take care of casting at assignment.
I expected the following code to work properly, but at runtime i get a
java.lang.VerifyError as shown below:
F:wdHello>ajbrowser HelloWorld.lst
java.lang.VerifyError: (class: de/rohith/PrinterWorld, method: returnArrayWithCl
oning signature: ()[Ljava/lang/Integer;) Incompatible argument to function
at de.rohith.HelloWorld.main(HelloWorld.java:18)
Exception in thread "main"
I suspect the compiler fails to notice the return types of the methods being
caught at compile time.
I have tested this code with both ajbrowser as well as AJDT, both result in the
same error output.
-----------HelloWorldAspect.java---------------
package de.rohith;
import java.lang.Object;
public aspect HelloWorldAspect {

private int callDepth = -1;
public HelloWorldAspect() {
}

pointcut hello(): !within(HelloWorldAspect);

pointcut method(): execution(public (*[]) de..*(..));

pointcut cloning(): call(* java.lang.Object.clone());
declare warning: method() && hello(): "*[] returning method called" ;

Object[] around(): cflow(method()) && cloning() && hello() {
print("", thisEnclosingJoinPointStaticPart);
Object[] ret = proceed();
return (Object[])ret.clone();
}
private void print(String prefix, Object message) {
for (int i = 0, spaces = callDepth * 2; i < spaces; i++) {
System.out.print(" ");
}
System.out.println(prefix + message);
}
}
-----------PrinterWorld.java------------
package de.rohith;
public class PrinterWorld {
private Integer[] intArray = new Integer[2];
public PrinterWorld() {

}
public void print() {
System.out.println("Hello World!");
}

public Integer returnInt() {
return new Integer(3);
}

public Integer[] returnArrayWithCloning() {
for (int i = 0; i < intArray.length; i++) {
intArray[i] = new Integer(i++);
}
return (Integer[])intArray.clone();
}

public Integer[] returnArrayWithoutCloning() {
return intArray;
}
}
-----------HelloWorld.java------------
package de.rohith;
public class HelloWorld {
public static void main(String[] args) {
PrinterWorld p = new PrinterWorld();
p.print();
Integer i = p.returnInt();
Integer[] intArray = p.returnArrayWithCloning();
Integer[] array2 = p.returnArrayWithoutCloning();
}
}