Bug 131777 – Failure when adding an empty name as a libray name in the build configuration
Using I20060309-1000,
When I enter by mistake an empty name as a library name I got:
java.lang.IllegalArgumentException: Path must include project and resource name: /org.eclipse.jdt.core.contrib.converter
at org.eclipse.core.runtime.Assert.isLegal(Assert.java:60)
at org.eclipse.core.internal.resources.Workspace.newResource(Workspace.java:1570)
at org.eclipse.core.internal.resources.Container.getFile(Container.java:116)
at org.eclipse.pde.internal.ui.editor.build.RuntimeInfoSection.handleLibInBinBuild(RuntimeInfoSection.java:265)
at org.eclipse.pde.internal.ui.editor.build.RuntimeInfoSection$7.run(RuntimeInfoSection.java:784)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
at org.eclipse.pde.internal.ui.editor.build.RuntimeInfoSection.handleNew(RuntimeInfoSection.java:757)
at org.eclipse.pde.internal.ui.editor.build.RuntimeInfoSection$PartAdapter.buttonSelected(RuntimeInfoSection.java:133)
at org.eclipse.pde.internal.ui.parts.SharedPartWithButtons$SelectionHandler.buttonSelected(SharedPartWithButtons.java:36)
at org.eclipse.pde.internal.ui.parts.SharedPartWithButtons$SelectionHandler.widgetSelected(SharedPartWithButtons.java:29)
at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:925)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3340)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2960)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1924)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1888)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:422)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:107)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:374)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:169)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:585)
at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)
at org.eclipse.core.launcher.Main.basicRun(Main.java:282)
at org.eclipse.core.launcher.Main.run(Main.java:977)
at org.eclipse.core.launcher.Main.main(Main.java:952)
I would expect this to be caught and handle more gracefully.